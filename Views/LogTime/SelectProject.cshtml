
@model List<Switchgear_TimeTracker.Models.TblProject>
@{
    ViewData["Title"] = "Project Select";
}

<div class="text-center">
    <select class="projectInput" id="selectProjectID">
        <option value="" disabled selected>Select a project</option>
            @foreach (var project in Model)
            {
                <option value="P @project.Id">@project.ProjectNo</option>
            }
        </select>
        <h4>or</h4>
        <h3>Scan Project ID</h3>
    <input type="text" id="scanProjectID" autofocus />
</div>

@section Scripts {
    <script>
        function selectProject() {
            const projectList = @Html.Raw(Json.Serialize(Model));
            try {
                const scannedProjectId = this.value.toUpperCase();
                if (!scannedProjectId.startsWith("P")){
                    throw new Error("This ID is not in the correct format");
                };
                const removedPscannedProjectId = scannedProjectId.replace("P", "").trim();
                const parsedScannedProjectId = parseInt(removedPscannedProjectId);
                const isInProjectList = projectList.find(project => project.id === parsedScannedProjectId);
                if (isInProjectList) {
                    window.location.href = `/LogTime/Index?projectId=${parsedScannedProjectId}`;
                }
                else {
                    throw new Error("Scanned project is not in the database");
                }
            }
            catch (error) {
                console.error(error);
                window.alert(error);
            }
        }
        document.getElementById("selectProjectID").addEventListener("change", selectProject);
        document.getElementById("scanProjectID").addEventListener("change", selectProject);
    </script>
}