@model TaskLogsViewModel
@{
    string alertType = Convert.ToString(TempData["AlertType"]);
    ViewData["Title"] = "Project Work Logger";
}
<section>
    @if (@Model != null)
    {
        <h2>Project: @Model.SelectedProject.ProjectNo</h2>
    }
    else
    {
        <h2>No Project Selected</h2>
    }
    <a href="/LogTime/SelectTask">Change Task</a>
</section>

@if (Model != null)
{
    if (Model.SelectedProject == null)
    {
        <h2>no data available</h2>
    }
    // filter time stamps for ones currently running
    var workingUsers = @Model.LaborTimeStamps.Where(timeStamp => timeStamp.ClockOut == null);
    <form method='post' action="/LogTime/ClockUserInOut">
        @Html.AntiForgeryToken()
        <h2>Clock in/out</h2>
        <input name="userClock" id="userClock" type="text" autofocus class='form-control input-sm' onchange="this.form.submit()" min=1 />
        <input name="projectClock"
        id="projectClock"
        type="text"
        style="display:none"
        value=@Model.SelectedProject.Id />
    </form>
    if (TempData["AlertMessage"] != null)
    {
        <div class="alert @alertType">
            <strong>@Html.Raw(TempData["AlertMessage"])</strong>
            @if (TempData["ErrorText"] != null)
            {                
                <br />
                <br />
                <p>Error: @TempData["ErrorText"]</p>
            }
        </div>
    }
    <section>
        <dl>
            <dt>Hours worked</dt>
            <dd>@Model.HoursWorked</dd>

            <dt>Hours Required</dt>
            <dd>To be added</dd>

            <dt>Employees working</dt>
            <dd>@workingUsers.Count()</dd>
        </dl>
        <ul>
            @foreach (var timeStamp in workingUsers)
            {
                string userName = timeStamp.User?.FullName ?? "Unknown User";
                <li>
                    @userName
                </li>
            }
        </ul>
    </section>
}