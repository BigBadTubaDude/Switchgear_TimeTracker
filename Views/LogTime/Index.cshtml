@model TaskLogsViewModel
@{
    string alertType = Convert.ToString(TempData["AlertType"]);
    string alertMessage = Convert.ToString(TempData["AlertMessage"]);
    string errorText = Convert.ToString(TempData["ErrorText"]);
    ViewData["Title"] = "Time Logger";
}
<section>
    <h2>Project: @Model.SelectedTask.Pannel.Project.ProjectNo</h2>
    <a href="/LogTime/SelectTask">Change Task</a>
</section>


    @{
        // filter time stamps for ones currently running
        var workingUsers = @Model.LaborTimeStamps.Where(timeStamp => timeStamp.ClockOut == null);
}
    <form method='post' action="/LogTime/ClockUserInOut">
        @Html.AntiForgeryToken()
        <h2>Clock in/out</h2>
        <input name="userClock" id="userClock" type="text" autofocus class='form-control input-sm' onchange="this.form.submit()" min=1 />
        <input name="taskClock"
        id="taskClock"
        type="text"
        style="display:none"
        value=@Model.SelectedTask.Id />
    </form>
    <p>DEBUG > Type: '@alertType' | Message: '@alertMessage'</p>
    @if (!string.IsNullOrEmpty(alertMessage))
    {
        <div class="alert @alertType alert-suc">
        <strong>@Html.Raw(alertMessage)</strong>
        @if (errorText != null)
            {                
                <br />
                <br />
            <p>Error: @errorText</p>
            }
        </div>
    }
    <section>
        <dl>
            <dt>Project Hours worked</dt>
            <dd>@Model.HoursWorked["project"]</dd>

            <dt>Task Hours worked</dt>
            <dd>@Model.HoursWorked["task"]</dd>

            <dt>Hours Required</dt>
            <dd>To be added</dd>

             <dt>Employees working</dt> 
             <dd>@workingUsers.Count()</dd> 
        </dl>
        <ul>
             @foreach (var timeStamp in workingUsers) 
             { 
                 string userName = timeStamp.User?.FullName ?? "Unknown User"; 
                 <li> 
                     @userName 
                 </li> 
             }
        </ul>
    </section>
