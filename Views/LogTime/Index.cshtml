@model TaskLogsViewModel
@{
    string alertType = Convert.ToString(TempData["AlertType"]);
    string alertMessage = Convert.ToString(TempData["AlertMessage"]);
    string errorText = Convert.ToString(TempData["ErrorText"]);
    ViewData["Title"] = "Time Logger";
}

<section>
    <h2>Project: @Model?.SelectedTask?.Pannel?.Project?.ProjectNo</h2>
    <h2>Panel: @Model?.SelectedTask?.Pannel?.PanelNumber</h2>
    <h3>Area: @Model?.SelectedTask?.Area?.Name</h3>
    <h3>Task: @Model?.SelectedTask?.Action?.Name</h3>
    <a href="/LogTime/SelectTask">Change Task</a>
    <br /><br />
    @if (Model?.BackplateSelect != null)
    {
        <h4>Backplate: @Model.BackplateSelect.Section@Model.BackplateSelect.Position</h4>
        <a href="/LogTime/SelectBackplate?taskID=@Model.SelectedTask.Id">Change Backplate</a>
        <br /><br />
    }
</section>


@{
    // filter time stamps for ones currently running
    var workingUsers = @Model?.LaborTimeStamps?.Where(timeStamp => timeStamp.ClockOut == null);
}       
<form method='post' action="/LogTime/ClockUserInOut" id="clockInOutForm">
    @Html.AntiForgeryToken()
    <h2>Clock in/out</h2>
    <select id="userID" name="userID">
        @foreach (var user in Model.SimpleAllWorkers)
        {
            <option data-tagno="@user.TagNo" value="@user.Id">
                @user.Name
            </option>
        }
    </select>
    <button type="submit">clock</button>
    <br />
    <label for="userTag">Scan user:</label>
    <input name="userTag" id="userTag" type="text" autofocus class='form-control input-sm' />
    <input name="taskClock" id="taskClock" type="hidden" value=@Model.SelectedTask.Id />
    <input name="backplateIDInput" id="backplateIDInput" type="hidden" value="@Model?.BackplateSelect?.Id" />
    </form>
    @if (!string.IsNullOrEmpty(alertMessage))
    {
        <div class="alert @alertType">
        <strong>@Html.Raw(alertMessage)</strong>
        @if (!string.IsNullOrEmpty(errorText))
            {                
                <br />
                <br />
            <p>Error: @errorText</p>
            }
        </div>
    }
    <section>
        <dl>
            <dt>Project Hours worked</dt>
            <dd>@Model.HoursWorked["project"]</dd>

            <dt>Task Hours worked</dt>
            <dd>@Model.HoursWorked["task"]</dd>

            <dt>Hours Required</dt>
            <dd>To be added</dd>

             <dt>Employees working</dt> 
             <dd>@workingUsers.Count()</dd> 
        </dl>
        <ul>
             @foreach (var timeStamp in workingUsers) 
             { 
                 string userName = timeStamp.User?.FullName ?? "Unknown User"; 
                 <li> 
                     @userName 
                 </li> 
             }
        </ul>
    </section>

<script>

         document.addEventListener("DOMContentLoaded", () => {
            // Takes rfid tag number and converts it to matching user ID before form submission
            const form = document.getElementById("clockInOutForm");
            const userSelectIDInputElement = document.getElementById("userID");
            const userOptions = Array.from(userSelectIDInputElement.options);
            const userScanElement = document.getElementById("userTag");
            userScanElement.addEventListener("keydown", event => {
                if (event.key === "Enter") {
                    event.preventDefault();
                    const userTagNo = event.target.value.trim();
                    const matchedOption = userOptions.find(option => option.dataset.tagno === userTagNo);
                    if (!matchedOption) {
                        alert("No user with that tag.");
                        userScanElement.value = "";
                        return;
                    }
                    matchedOption.selected = true;                    
                    form.submit();
                }
            })
         });
</script> 